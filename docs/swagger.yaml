basePath: /
definitions:
  product.Product:
    properties:
      created_at:
        type: integer
      deleted_at:
        type: integer
      product_id:
        type: string
      product_name:
        type: string
      stock:
        type: integer
      updated_at:
        type: integer
    type: object
  utils.HTTPError:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
host: 3.27.69.11:4040
info:
  contact:
    email: nasutioncode@gmail.com
    name: Nasution
    url: https://www.github.io/nascript
  description: This web-service-api kaks-cloud-web-api-task. this project for the
    KAKS master's degree in computer science
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: kaks-cloud-web-api-task
  version: "1.0"
paths:
  /api/v1/product:
    get:
      consumes:
      - application/json
      description: Get all products
      parameters:
      - description: Page number
        in: query
        name: page
        type: integer
      - description: Number of items per page
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/product.Product'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Get all products
      tags:
      - product
    post:
      consumes:
      - application/json
      description: Create a new product
      parameters:
      - description: Product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/product.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Create a new product
      tags:
      - product
  /api/v1/product/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Delete a product by ID
      tags:
      - product
    get:
      consumes:
      - application/json
      description: Get a product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Get a product by ID
      tags:
      - product
    put:
      consumes:
      - application/json
      description: Update a product by ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      - description: Product
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/product.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product.Product'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/utils.HTTPError'
      summary: Update a product by ID
      tags:
      - product
swagger: "2.0"
